{"ast":null,"code":"import { ME_FILENAME } from './constants';\nexport function jsonCopy(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n/**\n * Return a JSON object with the username\n * and domain of the kingdom\n *\n * Accepts URLs of the format:\n * https://example.com/kingdom/username.id\n * @param  {string} url\n * @return {Object} an Object with keys `app` and `username`\n */\n\nexport function subjectFromKingdomUrl(url) {\n  const tokens = url.split('/kingdom');\n  const app = tokens[0];\n  const username = tokens[1].split('/')[1];\n  return {\n    app,\n    username\n  };\n}\nexport function loadRuler(userSession, username, app) {\n  const options = {\n    decrypt: false,\n    username,\n    app\n  };\n  return userSession.getFile(ME_FILENAME, options).then(content => {\n    if (content) {\n      const ruler = JSON.parse(content);\n      return ruler;\n    } else {\n      const ruler = null;\n      return ruler;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/anthony/gh/animal-kingdom/src/utils.js"],"names":["ME_FILENAME","jsonCopy","object","JSON","parse","stringify","subjectFromKingdomUrl","url","tokens","split","app","username","loadRuler","userSession","options","decrypt","getFile","then","content","ruler"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC/B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,MAAf,CAAX,CAAP;AACD;AAGD;;;;;;;;;;AASA,OAAO,SAASI,qBAAT,CAA+BC,GAA/B,EAAoC;AACzC,QAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,UAAV,CAAf;AACA,QAAMC,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAlB;AACA,QAAMG,QAAQ,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAjB;AACA,SAAO;AACLC,IAAAA,GADK;AAELC,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,SAAT,CAAmBC,WAAnB,EAAgCF,QAAhC,EAA0CD,GAA1C,EAA+C;AACpD,QAAMI,OAAO,GAAG;AAAEC,IAAAA,OAAO,EAAE,KAAX;AAAkBJ,IAAAA,QAAlB;AAA4BD,IAAAA;AAA5B,GAAhB;AACA,SAAOG,WAAW,CAACG,OAAZ,CAAoBhB,WAApB,EAAiCc,OAAjC,EACNG,IADM,CACAC,OAAD,IAAa;AACjB,QAAGA,OAAH,EAAY;AACV,YAAMC,KAAK,GAAGhB,IAAI,CAACC,KAAL,CAAWc,OAAX,CAAd;AACA,aAAOC,KAAP;AACD,KAHD,MAGO;AACL,YAAMA,KAAK,GAAG,IAAd;AACA,aAAOA,KAAP;AACD;AACF,GATM,CAAP;AAUD","sourcesContent":["import { ME_FILENAME } from './constants'\n\nexport function jsonCopy(object) {\n  return JSON.parse(JSON.stringify(object))\n}\n\n\n/**\n * Return a JSON object with the username\n * and domain of the kingdom\n *\n * Accepts URLs of the format:\n * https://example.com/kingdom/username.id\n * @param  {string} url\n * @return {Object} an Object with keys `app` and `username`\n */\nexport function subjectFromKingdomUrl(url) {\n  const tokens = url.split('/kingdom')\n  const app = tokens[0]\n  const username = tokens[1].split('/')[1]\n  return {\n    app,\n    username\n  }\n}\n\nexport function loadRuler(userSession, username, app) {\n  const options = { decrypt: false, username, app }\n  return userSession.getFile(ME_FILENAME, options)\n  .then((content) => {\n    if(content) {\n      const ruler = JSON.parse(content)\n      return ruler\n    } else {\n      const ruler = null\n      return ruler\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}