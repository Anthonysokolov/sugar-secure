{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/gh/animal-kingdom/src/SignedIn.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { UserSession } from 'blockstack';\nimport Kingdom from './Kingdom';\nimport Readings from './Readings';\nimport NavBar from './NavBar';\nimport { appConfig, ME_FILENAME } from './constants';\nimport './SignedIn.css';\nimport Add from \"./add\";\n\nclass SignedIn extends Component {\n  constructor(props) {\n    super(props);\n    this.userSession = new UserSession({\n      appConfig\n    });\n    this.state = {\n      me: {},\n      savingMe: false,\n      savingKingdown: false,\n      redirectToMe: false //selectedAnimal: false,\n      //selectedTerritory: false\n\n    };\n    this.saveMe = this.saveMe.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  saveMe(me) {\n    this.setState({\n      me,\n      savingMe: true\n    });\n    const options = {\n      encrypt: true\n    };\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(me), options).finally(() => {\n      this.setState({\n        savingMe: false,\n        redirectToMe: false\n      });\n    });\n  }\n\n  signOut(e) {\n    e.preventDefault();\n    this.userSession.signUserOut();\n    window.location = '/';\n  }\n\n  render() {\n    const username = this.userSession.loadUserData().username; //const me = this.state.me\n\n    const redirectToMe = this.state.redirectToMe;\n\n    if (redirectToMe) {\n      // User hasn't configured their animal\n      if (window.location.pathname !== '/me') {\n        return React.createElement(Redirect, {\n          to: \"/me\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      }\n    }\n\n    if (window.location.pathname === '/') {\n      return React.createElement(Redirect, {\n        to: \"/kingdom/\".concat(username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"SignedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      username: username,\n      signOut: this.signOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/kingdom/\".concat(username),\n      render: routeProps => React.createElement(Kingdom, Object.assign({\n        myKingdom: true,\n        protocol: window.location.protocol,\n        ruler: username,\n        realm: window.location.origin.split('//')[1]\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add/\",\n      render: routeProps => React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SignedIn;","map":{"version":3,"sources":["/Users/anthony/gh/animal-kingdom/src/SignedIn.js"],"names":["React","Component","Switch","Route","Redirect","UserSession","Kingdom","Readings","NavBar","appConfig","ME_FILENAME","Add","SignedIn","constructor","props","userSession","state","me","savingMe","savingKingdown","redirectToMe","saveMe","bind","signOut","setState","options","encrypt","putFile","JSON","stringify","finally","e","preventDefault","signUserOut","window","location","render","username","loadUserData","pathname","routeProps","protocol","origin","split"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { UserSession } from 'blockstack'\nimport Kingdom from './Kingdom'\nimport Readings from './Readings'\nimport NavBar from './NavBar'\nimport { appConfig, ME_FILENAME } from './constants'\nimport './SignedIn.css'\nimport Add from \"./add\"\n\nclass SignedIn extends Component {\n\n  constructor(props) {\n    super(props)\n    this.userSession = new UserSession({ appConfig })\n    this.state = {\n      me: {},\n      savingMe: false,\n      savingKingdown: false,\n      redirectToMe: false\n      //selectedAnimal: false,\n      //selectedTerritory: false\n    }\n    this.saveMe = this.saveMe.bind(this)\n    this.signOut = this.signOut.bind(this)\n  }\n\n  saveMe(me) {\n    this.setState({me, savingMe: true})\n    const options = { encrypt: true }\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(me), options)\n    .finally(() => {\n      this.setState({savingMe: false, redirectToMe: false})\n    })\n  }\n\n  signOut(e) {\n    e.preventDefault()\n    this.userSession.signUserOut()\n    window.location = '/'\n  }\n\n  render() {\n    const username = this.userSession.loadUserData().username\n    //const me = this.state.me\n    const redirectToMe = this.state.redirectToMe\n    if(redirectToMe) {\n      // User hasn't configured their animal\n      if(window.location.pathname !== '/me') {\n        return (\n          <Redirect to=\"/me\" />\n        )\n      }\n    }\n\n    if(window.location.pathname === '/') {\n      return (\n        <Redirect to={`/kingdom/${username}`} />\n      )\n    }\n\n\n    return (\n      <div className=\"SignedIn\">\n      <NavBar username={username} signOut={this.signOut}/>\n      <Switch>\n              <Route\n                path={`/kingdom/${username}`}\n                render={\n                  routeProps => <Kingdom\n                  myKingdom={true}\n                  protocol={window.location.protocol}\n                  ruler={username}\n                  realm={window.location.origin.split('//')[1]}\n                  {...routeProps} />\n                }\n              />\n              <Route\n                path='/add/'\n                render={\n                  routeProps => <Add/>\n                }\n              />\n      </Switch>\n      </div>\n    );\n  }\n}\nexport default SignedIn\n"]},"metadata":{},"sourceType":"module"}