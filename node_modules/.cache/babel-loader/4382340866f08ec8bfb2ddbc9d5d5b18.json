{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/gh/animal-kingdom/src/Kingdom.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserSession } from 'blockstack';\nimport { jsonCopy } from './utils';\nimport { appConfig, ME_FILENAME, XPLORER_URL } from './constants';\nimport { READINGS } from './SignedIn';\nimport CanvasJSReact from './canvasjs.react';\nimport './Kingdom.css';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nlet data;\n\nclass Kingdom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      app: \"\".concat(props.protocol, \"//\").concat(props.realm),\n      rulerUsername: \"Anthony\",\n      clickAdd: false,\n      readings: \"3\"\n    };\n    this.userSession = new UserSession({\n      appConfig\n    });\n    this.handleChange = this.handleChange.bind(this);\n    window.addEventListener(\"submit\", () => {\n      console.log(data);\n    });\n  }\n\n  componentWillMount() {\n    const app = this.state.app;\n    const ruler = this.props.ruler;\n    const search = window.location.search;\n\n    if (search) {\n      const appUrl = search.split('=')[1];\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      });\n    }\n  }\n\n  loadMe() {\n    /*\n    let options = { encrypt: true }\n    this.userSession.putFile(ME_FILENAME, JSON.stringify([{y:100},{y:120},{y:140}]), options)\n    */\n    let options = {\n      decrypt: true\n    };\n    this.userSession.getFile(ME_FILENAME, options).then(content => {\n      if (content) {\n        data = [{\n          y: 90\n        }, {\n          y: 80\n        }, {\n          y: 92\n        }, {\n          y: 110\n        }, {\n          y: 105\n        }]; //return JSON.parse(content)\n      }\n\n      return [];\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextSubjects = nextProps.subjects;\n\n    if (nextSubjects) {\n      if (nextSubjects.length !== this.state.subjects.length) {\n        this.setState({\n          subjects: jsonCopy(nextSubjects)\n        });\n      }\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const mine = this.props.myKingdom;\n    const username = this.state.rulerUsername;\n    const app = this.state.app;\n    const clickAdd = this.state.clickAdd;\n    const currentUsername = this.props.currentUsername;\n    this.loadMe();\n    console.log(data);\n    const options = {\n      axisY: {\n        minimum: 60\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: this.loadMe()\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"Kingdom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row ruler\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, username, \"'s Glucose Readings\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" \", READINGS, \" \"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Add Reading\"), mine ? React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"addReading\",\n      className: \"add-frame col-lg-8\",\n      style: {\n        borderColor: clickAdd ? 'red' : '#f8f9fa'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addReading,\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      required: true,\n      placeholder: \"Glucose value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Add reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))))) : null))));\n  }\n\n}\n\nexport default Kingdom;","map":{"version":3,"sources":["/Users/anthony/gh/animal-kingdom/src/Kingdom.js"],"names":["React","Component","Link","UserSession","jsonCopy","appConfig","ME_FILENAME","XPLORER_URL","READINGS","CanvasJSReact","CanvasJS","CanvasJSChart","data","Kingdom","constructor","props","state","value","app","protocol","realm","rulerUsername","clickAdd","readings","userSession","handleChange","bind","window","addEventListener","console","log","componentWillMount","ruler","search","location","appUrl","split","setState","loadMe","options","decrypt","getFile","then","content","y","componentWillReceiveProps","nextProps","nextSubjects","subjects","length","event","target","render","mine","myKingdom","username","currentUsername","axisY","minimum","type","dataPoints","borderColor","addReading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserSession } from 'blockstack'\nimport { jsonCopy} from './utils'\nimport { appConfig, ME_FILENAME, XPLORER_URL } from './constants'\nimport {READINGS} from './SignedIn'\nimport CanvasJSReact from './canvasjs.react'\n\n\nimport './Kingdom.css'\n\nvar CanvasJS = CanvasJSReact.CanvasJS\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart\n\nlet data\n\nclass Kingdom extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n      app:`${props.protocol}//${props.realm}`,\n      rulerUsername: \"Anthony\",\n      clickAdd: false,\n      readings:\"3\"\n    }\n    this.userSession = new UserSession({ appConfig })\n    this.handleChange = this.handleChange.bind(this)\n    window.addEventListener(\"submit\", () => {\n      console.log(data)\n    });\n  }\n\n  componentWillMount() {\n    const app = this.state.app\n    const ruler = this.props.ruler\n    const search = window.location.search\n    if(search) {\n      const appUrl = search.split('=')[1]\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      })\n    }\n  }\n\n  loadMe() {\n    /*\n    let options = { encrypt: true }\n    this.userSession.putFile(ME_FILENAME, JSON.stringify([{y:100},{y:120},{y:140}]), options)\n    */\n    let options = { decrypt: true }\n    this.userSession.getFile(ME_FILENAME, options).then((content) =>{\n      if(content){\n        data = [\n            { y: 90  },\n            { y: 80  },\n            { y: 92  },\n            { y: 110  },\n            { y: 105 },\n        ]\n        //return JSON.parse(content)\n      }\n      return []\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextSubjects = nextProps.subjects\n    if(nextSubjects) {\n      if (nextSubjects.length !== this.state.subjects.length) {\n        this.setState({ subjects: jsonCopy(nextSubjects) })\n      }\n    }\n  }\n\n  handleChange(event) {\n   this.setState({value: event.target.value});\n  }\n\n  render() {\n    const mine = this.props.myKingdom\n    const username = this.state.rulerUsername\n    const app = this.state.app\n    const clickAdd = this.state.clickAdd\n    const currentUsername = this.props.currentUsername\n    this.loadMe()\n    console.log(data)\n\n    const options = {\n      axisY:{\n        minimum:60\n      },\n      data: [{\n                type: \"line\",\n                dataPoints:this.loadMe()\n       }]\n   }\n\n    return (\n      <div className=\"Kingdom\">\n        <div className=\"row\">\n        </div>\n        <div className=\"row ruler\">\n          <div className=\"col-lg-12\">\n            <h2>{username}'s Glucose Readings</h2>\n            <div>\n              <CanvasJSChart options = {options}/>\n            </div>\n            <h2> {READINGS} </h2>\n            <div className=\"container\">\n              <h2>Add Reading</h2>\n              {mine ?\n                <div className=\"row justify-content-center\">\n                  <div\n                    id=\"addReading\"\n                    className=\"add-frame col-lg-8\"\n                    style={{borderColor: (clickAdd ? 'red' : '#f8f9fa')}}\n                  >\n                    <form onSubmit={this.addReading} className=\"input-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        onChange={this.handleChange}\n                        value={this.state.value}\n                        required\n                        placeholder=\"Glucose value\"\n                      />\n                      <div className=\"input-group-append\">\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add reading\"/>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                :\n                null\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Kingdom\n"]},"metadata":{},"sourceType":"module"}