{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/gh/animal-kingdom/src/Kingdom.js\";\nimport React, { Component } from 'react'; //import { Link } from 'react-router-dom'\n\nimport { UserSession } from 'blockstack';\nimport { jsonCopy } from './utils';\nimport { appConfig, ME_FILENAME } from './constants';\nimport CanvasJSReact from './canvasjs.react';\nimport './Kingdom.css'; //var CanvasJS = CanvasJSReact.CanvasJS\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nlet data = [{\n  y: 90\n}, {\n  y: 80\n}, {\n  y: 92\n}, {\n  y: 110\n}, {\n  y: 105\n}];\n\nclass Kingdom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      app: \"\".concat(props.protocol, \"//\").concat(props.realm),\n      rulerUsername: \"Anthony\",\n      clickAdd: false,\n      readings: [],\n      newreadings: \"NOT\"\n    };\n    this.userSession = new UserSession({\n      appConfig\n    });\n    this.handleChange = this.handleChange.bind(this);\n    this.addReading = this.addReading.bind(this);\n  }\n\n  componentWillMount() {\n    const app = this.state.app;\n    const search = window.location.search;\n\n    if (search) {\n      const appUrl = search.split('=')[1];\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      });\n    }\n\n    this.loadMe();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextSubjects = nextProps.subjects;\n\n    if (nextSubjects) {\n      if (nextSubjects.length !== this.state.subjects.length) {\n        this.setState({\n          subjects: jsonCopy(nextSubjects)\n        });\n      }\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  loadMe() {\n    let options = {\n      encrypt: true\n    };\n    this.userSession.putFile(ME_FILENAME, JSON.stringify([{\n      y: 90\n    }, {\n      y: 101\n    }, {\n      y: 108\n    }, {\n      y: 98\n    }]), options);\n    let temp = [];\n    options = {\n      decrypt: true\n    };\n    this.userSession.getFile(ME_FILENAME, options).then(async content => {\n      if (content) {\n        temp = await JSON.parse(content);\n        this.setState({\n          readings: temp\n        });\n      }\n    });\n  }\n\n  addReading(event) {\n    event.preventDefault();\n    let options = {\n      encrypt: true\n    };\n    this.state.readings.push({\n      y: parseInt(this.state.value)\n    });\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(this.state.readings), options);\n    this.setState({\n      value: \"\"\n    });\n  }\n\n  render() {\n    const mine = this.props.myKingdom;\n    const username = this.state.rulerUsername;\n    const app = this.state.app;\n    const clickAdd = this.state.clickAdd;\n    const currentUsername = this.props.currentUsername;\n    console.log(this.state.readings);\n    const options = {\n      axisY: {\n        minimum: 60\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: this.state.readings\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"Kingdom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row ruler\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, username, \"'s Glucose Readings\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add Reading\"), mine ? React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"addReading\",\n      className: \"add-frame col-lg-8\",\n      style: {\n        borderColor: clickAdd ? 'red' : '#f8f9fa'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addReading,\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"number\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      required: true,\n      placeholder: \"Glucose value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Add reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))))) : null))));\n  }\n\n}\n\nexport default Kingdom;","map":{"version":3,"sources":["/Users/anthony/gh/animal-kingdom/src/Kingdom.js"],"names":["React","Component","UserSession","jsonCopy","appConfig","ME_FILENAME","CanvasJSReact","CanvasJSChart","data","y","Kingdom","constructor","props","state","value","app","protocol","realm","rulerUsername","clickAdd","readings","newreadings","userSession","handleChange","bind","addReading","componentWillMount","search","window","location","appUrl","split","setState","loadMe","componentWillReceiveProps","nextProps","nextSubjects","subjects","length","event","target","options","encrypt","putFile","JSON","stringify","temp","decrypt","getFile","then","content","parse","preventDefault","push","parseInt","render","mine","myKingdom","username","currentUsername","console","log","axisY","minimum","type","dataPoints","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,QAAT,QAAwB,SAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,aAAvC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAGA,OAAO,eAAP,C,CAEA;;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;AAEA,IAAIC,IAAI,GAAG,CACP;AAAEC,EAAAA,CAAC,EAAE;AAAL,CADO,EAEP;AAAEA,EAAAA,CAAC,EAAE;AAAL,CAFO,EAGP;AAAEA,EAAAA,CAAC,EAAE;AAAL,CAHO,EAIP;AAAEA,EAAAA,CAAC,EAAE;AAAL,CAJO,EAKP;AAAEA,EAAAA,CAAC,EAAE;AAAL,CALO,CAAX;;AAQA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAE9BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,GAAG,YAAIH,KAAK,CAACI,QAAV,eAAuBJ,KAAK,CAACK,KAA7B,CAFQ;AAGXC,MAAAA,aAAa,EAAE,SAHJ;AAIXC,MAAAA,QAAQ,EAAE,KAJC;AAKXC,MAAAA,QAAQ,EAAC,EALE;AAMXC,MAAAA,WAAW,EAAC;AAND,KAAb;AAQA,SAAKC,WAAL,GAAmB,IAAIpB,WAAJ,CAAgB;AAAEE,MAAAA;AAAF,KAAhB,CAAnB;AACA,SAAKmB,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,UAAMX,GAAG,GAAG,KAAKF,KAAL,CAAWE,GAAvB;AACA,UAAMY,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAA/B;;AACA,QAAGA,MAAH,EAAW;AACT,YAAMG,MAAM,GAAGH,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAf;AACA,WAAKC,QAAL,CAAc;AACZlB,QAAAA,KAAK,EAAEgB,MADK;AAEZX,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID;;AACD,SAAKc,MAAL;AAED;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,UAAMC,YAAY,GAAGD,SAAS,CAACE,QAA/B;;AACA,QAAGD,YAAH,EAAiB;AACf,UAAIA,YAAY,CAACE,MAAb,KAAwB,KAAKzB,KAAL,CAAWwB,QAAX,CAAoBC,MAAhD,EAAwD;AACtD,aAAKN,QAAL,CAAc;AAAEK,UAAAA,QAAQ,EAAElC,QAAQ,CAACiC,YAAD;AAApB,SAAd;AACD;AACF;AACF;;AAEDb,EAAAA,YAAY,CAACgB,KAAD,EAAQ;AACnB,SAAKP,QAAL,CAAc;AAAClB,MAAAA,KAAK,EAAEyB,KAAK,CAACC,MAAN,CAAa1B;AAArB,KAAd;AACA;;AAEDmB,EAAAA,MAAM,GAAG;AAEP,QAAIQ,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,SAAKpB,WAAL,CAAiBqB,OAAjB,CAAyBtC,WAAzB,EAAsCuC,IAAI,CAACC,SAAL,CAAe,CAAC;AAACpC,MAAAA,CAAC,EAAC;AAAH,KAAD,EAAQ;AAACA,MAAAA,CAAC,EAAC;AAAH,KAAR,EAAgB;AAACA,MAAAA,CAAC,EAAC;AAAH,KAAhB,EAAwB;AAACA,MAAAA,CAAC,EAAC;AAAH,KAAxB,CAAf,CAAtC,EAAuFgC,OAAvF;AAEA,QAAIK,IAAI,GAAG,EAAX;AACCL,IAAAA,OAAO,GAAG;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAV;AACD,SAAKzB,WAAL,CAAiB0B,OAAjB,CAAyB3C,WAAzB,EAAsCoC,OAAtC,EAA+CQ,IAA/C,CAAoD,MAAOC,OAAP,IAAkB;AACpE,UAAGA,OAAH,EAAW;AACTJ,QAAAA,IAAI,GAAG,MAAMF,IAAI,CAACO,KAAL,CAAWD,OAAX,CAAb;AACA,aAAKlB,QAAL,CAAc;AAACZ,UAAAA,QAAQ,EAAC0B;AAAV,SAAd;AACD;AACF,KALD;AAMD;;AAEDrB,EAAAA,UAAU,CAACc,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACa,cAAN;AACA,QAAIX,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,SAAK7B,KAAL,CAAWO,QAAX,CAAoBiC,IAApB,CAAyB;AAAC5C,MAAAA,CAAC,EAAC6C,QAAQ,CAAC,KAAKzC,KAAL,CAAWC,KAAZ;AAAX,KAAzB;AACA,SAAKQ,WAAL,CAAiBqB,OAAjB,CAAyBtC,WAAzB,EAAsCuC,IAAI,CAACC,SAAL,CAAe,KAAKhC,KAAL,CAAWO,QAA1B,CAAtC,EAA2EqB,OAA3E;AACA,SAAKT,QAAL,CAAc;AAAClB,MAAAA,KAAK,EAAC;AAAP,KAAd;AACD;;AAEDyC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAK5C,KAAL,CAAW6C,SAAxB;AACA,UAAMC,QAAQ,GAAG,KAAK7C,KAAL,CAAWK,aAA5B;AACA,UAAMH,GAAG,GAAG,KAAKF,KAAL,CAAWE,GAAvB;AACA,UAAMI,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAA5B;AACA,UAAMwC,eAAe,GAAG,KAAK/C,KAAL,CAAW+C,eAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhD,KAAL,CAAWO,QAAvB;AACA,UAAMqB,OAAO,GAAG;AACdqB,MAAAA,KAAK,EAAC;AACJC,QAAAA,OAAO,EAAC;AADJ,OADQ;AAIdvD,MAAAA,IAAI,EAAE,CAAC;AACGwD,QAAAA,IAAI,EAAE,MADT;AAEGC,QAAAA,UAAU,EAAC,KAAKpD,KAAL,CAAWO;AAFzB,OAAD;AAJQ,KAAhB;AAUA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKsC,QAAL,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIjB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGe,IAAI,GACH;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,KAAK,EAAE;AAACU,QAAAA,WAAW,EAAG/C,QAAQ,GAAG,KAAH,GAAW;AAAlC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAM,MAAA,QAAQ,EAAE,KAAKM,UAArB;AAAiC,MAAA,SAAS,EAAC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAKF,YAHjB;AAIE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAJpB;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,WAAW,EAAC,eANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,iBAA/B;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CALF,CADF,CADG,GAuBH,IAzBJ,CALF,CADF,CAHF,CADF;AA0CD;;AA9H6B;;AAiIhC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react'\n//import { Link } from 'react-router-dom'\nimport { UserSession } from 'blockstack'\nimport { jsonCopy} from './utils'\nimport { appConfig, ME_FILENAME } from './constants'\nimport CanvasJSReact from './canvasjs.react'\n\n\nimport './Kingdom.css'\n\n//var CanvasJS = CanvasJSReact.CanvasJS\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart\n\nlet data = [\n    { y: 90  },\n    { y: 80  },\n    { y: 92  },\n    { y: 110  },\n    { y: 105 },\n]\n\nclass Kingdom extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n      app:`${props.protocol}//${props.realm}`,\n      rulerUsername: \"Anthony\",\n      clickAdd: false,\n      readings:[],\n      newreadings:\"NOT\"\n    }\n    this.userSession = new UserSession({ appConfig })\n    this.handleChange = this.handleChange.bind(this)\n    this.addReading = this.addReading.bind(this)\n  }\n\n  componentWillMount() {\n    const app = this.state.app\n    const search = window.location.search\n    if(search) {\n      const appUrl = search.split('=')[1]\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      })\n    }\n    this.loadMe()\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextSubjects = nextProps.subjects\n    if(nextSubjects) {\n      if (nextSubjects.length !== this.state.subjects.length) {\n        this.setState({ subjects: jsonCopy(nextSubjects) })\n      }\n    }\n  }\n\n  handleChange(event) {\n   this.setState({value: event.target.value});\n  }\n\n  loadMe() {\n\n    let options = { encrypt: true }\n    this.userSession.putFile(ME_FILENAME, JSON.stringify([{y:90},{y:101},{y:108},{y:98}]), options)\n\n    let temp = []\n     options = { decrypt: true }\n    this.userSession.getFile(ME_FILENAME, options).then(async (content) =>{\n      if(content){\n        temp = await JSON.parse(content)\n        this.setState({readings:temp})\n      }\n    })\n  }\n\n  addReading(event){\n    event.preventDefault()\n    let options = { encrypt: true }\n    this.state.readings.push({y:parseInt(this.state.value)})\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(this.state.readings), options)\n    this.setState({value:\"\"})\n  }\n\n  render() {\n    const mine = this.props.myKingdom\n    const username = this.state.rulerUsername\n    const app = this.state.app\n    const clickAdd = this.state.clickAdd\n    const currentUsername = this.props.currentUsername\n    console.log(this.state.readings)\n    const options = {\n      axisY:{\n        minimum:60\n      },\n      data: [{\n                type: \"line\",\n                dataPoints:this.state.readings\n       }]\n   }\n\n    return (\n      <div className=\"Kingdom\">\n        <div className=\"row\">\n        </div>\n        <div className=\"row ruler\">\n          <div className=\"col-lg-12\">\n            <h2>{username}'s Glucose Readings</h2>\n            <div>\n              <CanvasJSChart options = {options}/>\n            </div>\n            <div className=\"container\">\n              <h2>Add Reading</h2>\n              {mine ?\n                <div className=\"row justify-content-center\">\n                  <div\n                    id=\"addReading\"\n                    className=\"add-frame col-lg-8\"\n                    style={{borderColor: (clickAdd ? 'red' : '#f8f9fa')}}\n                  >\n                    <form onSubmit={this.addReading} className=\"input-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        onChange={this.handleChange}\n                        value={this.state.value}\n                        required\n                        placeholder=\"Glucose value\"\n                      />\n                      <div className=\"input-group-append\">\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add reading\"/>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                :\n                null\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Kingdom\n"]},"metadata":{},"sourceType":"module"}