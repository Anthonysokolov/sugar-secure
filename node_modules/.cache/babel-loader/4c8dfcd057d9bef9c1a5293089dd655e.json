{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/gh/animal-kingdom/src/Kingdom.js\";\nimport React, { Component } from 'react';\nimport { UserSession } from 'blockstack';\nimport { appConfig, ME_FILENAME } from './constants';\nimport CanvasJSReact from './canvasjs.react';\nimport './Kingdom.css';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Kingdom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      app: \"\".concat(props.protocol, \"//\").concat(props.realm),\n      rulerUsername: \"Anthony\",\n      readings: [],\n      newreadings: \"NOT\"\n    };\n    this.userSession = new UserSession({\n      appConfig\n    });\n    this.handleChange = this.handleChange.bind(this);\n    this.addReading = this.addReading.bind(this);\n  }\n\n  componentWillMount() {\n    const app = this.state.app;\n    const search = window.location.search;\n\n    if (search) {\n      const appUrl = search.split('=')[1];\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      });\n    }\n\n    this.loadMe();\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  loadMe() {\n    let temp = [];\n    let options = {\n      decrypt: true\n    };\n    this.userSession.getFile(ME_FILENAME, options).then(async content => {\n      if (content) {\n        temp = await JSON.parse(content);\n        this.setState({\n          readings: temp\n        });\n      }\n    });\n  }\n\n  addReading(event) {\n    event.preventDefault();\n    let options = {\n      encrypt: true\n    };\n    this.state.readings.push({\n      y: parseInt(this.state.value)\n    });\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(this.state.readings), options);\n    this.setState({\n      value: \"\"\n    });\n  }\n\n  render() {\n    const username = this.state.rulerUsername;\n    const app = this.state.app;\n    const clickAdd = this.state.clickAdd;\n    const options = {\n      axisY: {\n        minimum: 60\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: this.state.readings\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"Reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row ruler\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, username, \"'s Glucose Readings\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Add Reading\"), React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"addReading\",\n      className: \"add-frame col-lg-8\",\n      style: {\n        borderColor: clickAdd ? 'red' : '#f8f9fa'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addReading,\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"number\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      required: true,\n      placeholder: \"Glucose value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Add reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default Kingdom;","map":{"version":3,"sources":["/Users/anthony/gh/animal-kingdom/src/Kingdom.js"],"names":["React","Component","UserSession","appConfig","ME_FILENAME","CanvasJSReact","CanvasJSChart","Kingdom","constructor","props","state","value","app","protocol","realm","rulerUsername","readings","newreadings","userSession","handleChange","bind","addReading","componentWillMount","search","window","location","appUrl","split","setState","clickAdd","loadMe","event","target","temp","options","decrypt","getFile","then","content","JSON","parse","preventDefault","encrypt","push","y","parseInt","putFile","stringify","render","username","axisY","minimum","data","type","dataPoints","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { UserSession } from 'blockstack'\nimport { appConfig, ME_FILENAME } from './constants'\nimport CanvasJSReact from './canvasjs.react'\n\n\nimport './Kingdom.css'\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart\n\nclass Kingdom extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n      app:`${props.protocol}//${props.realm}`,\n      rulerUsername: \"Anthony\",\n      readings:[],\n      newreadings:\"NOT\"\n    }\n    this.userSession = new UserSession({ appConfig })\n    this.handleChange = this.handleChange.bind(this)\n    this.addReading = this.addReading.bind(this)\n  }\n\n  componentWillMount() {\n    const app = this.state.app\n    const search = window.location.search\n    if(search) {\n      const appUrl = search.split('=')[1]\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      })\n    }\n    this.loadMe()\n\n  }\n\n  handleChange(event) {\n   this.setState({value: event.target.value});\n  }\n\n  loadMe() {\n    let temp = []\n    let options = { decrypt: true }\n    this.userSession.getFile(ME_FILENAME, options).then(async (content) =>{\n      if(content){\n        temp = await JSON.parse(content)\n        this.setState({readings:temp})\n      }\n    })\n  }\n\n  addReading(event){\n    event.preventDefault()\n    let options = { encrypt: true }\n    this.state.readings.push({y:parseInt(this.state.value)})\n    this.userSession.putFile(ME_FILENAME, JSON.stringify(this.state.readings), options)\n    this.setState({value:\"\"})\n  }\n\n  render() {\n    const username = this.state.rulerUsername\n    const app = this.state.app\n    const clickAdd = this.state.clickAdd\n    const options = {\n      axisY:{\n        minimum:60\n      },\n      data: [{\n                type: \"line\",\n                dataPoints:this.state.readings\n       }]\n     }\n\n    return (\n      <div className=\"Reading\">\n        <div className=\"row\">\n        </div>\n        <div className=\"row ruler\">\n          <div className=\"col-lg-12\">\n            <h2>{username}'s Glucose Readings</h2>\n            <div>\n              <CanvasJSChart options = {options}/>\n            </div>\n            <div className=\"container\">\n              <h2>Add Reading</h2>\n                <div className=\"row justify-content-center\">\n                  <div\n                    id=\"addReading\"\n                    className=\"add-frame col-lg-8\"\n                    style={{borderColor: (clickAdd ? 'red' : '#f8f9fa')}}\n                  >\n                    <form onSubmit={this.addReading} className=\"input-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        onChange={this.handleChange}\n                        value={this.state.value}\n                        required\n                        placeholder=\"Glucose value\"\n                      />\n                      <div className=\"input-group-append\">\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add reading\"/>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Kingdom\n"]},"metadata":{},"sourceType":"module"}