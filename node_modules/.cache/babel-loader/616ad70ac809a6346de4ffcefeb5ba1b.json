{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/gh/animal-kingdom/src/Kingdom.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserSession } from 'blockstack';\nimport { jsonCopy } from './utils';\nimport { appConfig, EXPLORER_URL } from './constants';\nimport './Kingdom.css';\n\nclass Kingdom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ruler: {\n        animal: {},\n        territory: {}\n      },\n      subjects: [],\n      value: '',\n      app: \"\".concat(props.protocol, \"//\").concat(props.realm),\n      rulerUsername: props.ruler,\n      clickAdd: false\n    };\n    this.userSession = new UserSession({\n      appConfig\n    });\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    const app = this.state.app;\n    const ruler = this.props.ruler;\n    this.loadKingdom(ruler, app);\n    const search = window.location.search;\n\n    if (search) {\n      const appUrl = search.split('=')[1];\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextSubjects = nextProps.subjects;\n\n    if (nextSubjects) {\n      if (nextSubjects.length !== this.state.subjects.length) {\n        this.setState({\n          subjects: jsonCopy(nextSubjects)\n        });\n      }\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const mine = this.props.myKingdom;\n    const ruler = this.state.ruler;\n    const rulerAnimal = ruler.animal;\n    const rulerTerritory = ruler.territory;\n    const username = this.state.rulerUsername;\n    const subjects = this.state.subjects;\n    const myKingdom = this.props.myKingdom;\n    const app = this.state.app;\n    const clickAdd = this.state.clickAdd;\n    const currentUsername = this.props.currentUsername;\n    return React.createElement(\"div\", {\n      className: \"Kingdom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row ruler\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Welcome \", username), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add Reading\"), mine ? React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"addReading\",\n      className: \"add-frame col-lg-8\",\n      style: {\n        borderColor: clickAdd ? 'red' : '#f8f9fa'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addSubject,\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"url\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      required: true,\n      placeholder: \"Glucose value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Add reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))))) : null))));\n  }\n\n}\n\nexport default Kingdom;","map":{"version":3,"sources":["/Users/anthony/gh/animal-kingdom/src/Kingdom.js"],"names":["React","Component","Link","UserSession","jsonCopy","appConfig","EXPLORER_URL","Kingdom","constructor","props","state","ruler","animal","territory","subjects","value","app","protocol","realm","rulerUsername","clickAdd","userSession","handleChange","bind","componentWillMount","loadKingdom","search","window","location","appUrl","split","setState","componentWillReceiveProps","nextProps","nextSubjects","length","event","target","render","mine","myKingdom","rulerAnimal","rulerTerritory","username","currentUsername","borderColor","addSubject"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserSession } from 'blockstack'\nimport { jsonCopy} from './utils'\nimport { appConfig, EXPLORER_URL } from './constants'\n\nimport './Kingdom.css'\n\nclass Kingdom extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      ruler: {\n        animal: {\n\n        },\n        territory: {\n\n        }\n      },\n      subjects: [],\n      value: '',\n      app:`${props.protocol}//${props.realm}`,\n      rulerUsername: props.ruler,\n      clickAdd: false\n    }\n    this.userSession = new UserSession({ appConfig })\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentWillMount() {\n    const app = this.state.app\n    const ruler = this.props.ruler\n    this.loadKingdom(ruler, app)\n    const search = window.location.search\n    if(search) {\n      const appUrl = search.split('=')[1]\n      this.setState({\n        value: appUrl,\n        clickAdd: true\n      })\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextSubjects = nextProps.subjects\n    if(nextSubjects) {\n      if (nextSubjects.length !== this.state.subjects.length) {\n        this.setState({ subjects: jsonCopy(nextSubjects) })\n      }\n    }\n  }\n\n  handleChange(event) {\n   this.setState({value: event.target.value});\n  }\n\n  render() {\n    const mine = this.props.myKingdom\n    const ruler = this.state.ruler\n    const rulerAnimal = ruler.animal\n    const rulerTerritory = ruler.territory\n    const username = this.state.rulerUsername\n    const subjects = this.state.subjects\n    const myKingdom = this.props.myKingdom\n    const app = this.state.app\n    const clickAdd = this.state.clickAdd\n    const currentUsername = this.props.currentUsername\n    return (\n      <div className=\"Kingdom\">\n        <div className=\"row\">\n        </div>\n        <div className=\"row ruler\">\n          <div className=\"col-lg-12\">\n            <h2>Welcome {username}</h2>\n            <div className=\"container\">\n              <h2>Add Reading</h2>\n              {mine ?\n                <div className=\"row justify-content-center\">\n                  <div\n                    id=\"addReading\"\n                    className=\"add-frame col-lg-8\"\n                    style={{borderColor: (clickAdd ? 'red' : '#f8f9fa')}}\n                  >\n                    <form onSubmit={this.addSubject} className=\"input-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"url\"\n                        onChange={this.handleChange}\n                        value={this.state.value}\n                        required\n                        placeholder=\"Glucose value\"\n                      />\n                      <div className=\"input-group-append\">\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add reading\"/>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                :\n                null\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Kingdom\n"]},"metadata":{},"sourceType":"module"}